generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NotificationStatus {
  ACTIVE
  INACTIVE
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

enum MessageType {
  TEXT
  ALARM
}

model Message {
  id             Int                 @id @default(autoincrement())
  text           String
  type           MessageType         @default(TEXT)
  status         NotificationStatus?
  senderId       Int
  sender         User                @relation(fields: [senderId], references: [id])
  organizationId Int
  organization   Organization        @relation(fields: [organizationId], references: [id])
  createdAt      DateTime            @default(now())
}

model Notification {
  id             Int                @id @default(autoincrement())
  type           String
  message        String
  status         NotificationStatus @default(INACTIVE)
  triggeredById  Int
  triggeredBy    User               @relation(fields: [triggeredById], references: [id], name: "UserToNotification")
  organizationId Int
  organization   Organization       @relation(fields: [organizationId], references: [id])
  createdAt      DateTime           @default(now())
}

model User {
  id                Int                @id @default(autoincrement())
  firstName         String             @default("")
  lastName          String             @default("")
  organization      Organization?      @relation(fields: [organizationId], references: [id])
  organizationId    Int?
  email             String             @unique
  password          String
  createdAt         DateTime           @default(now())
  role              Role               @default(USER)
  isActive          Boolean            @default(true) // Určuje, zda má uživatel aktivní profil
  emailNotificationsEnabled Boolean    @default(true)
  notifications     Notification[]     @relation(name: "UserToNotification")
  messages          Message[]
  pushSubscriptions PushSubscription[]
}

model Organization {
  id            Int            @id @default(autoincrement())
  name          String
  country       String
  gpsLat        Float
  gpsLng        Float
  postalCode    String
  street        String
  city          String
  activeUntil DateTime @default(dbgenerated("(CURRENT_DATE + interval '3 months')"))
  subscriptionPaid Boolean       @default(false) // zda bylo zaplaceno (můžeš i podle activeUntil kontrolovat)
  subscriptionValidUntil DateTime?
  users         User[]
  notifications Notification[]
  messages      Message[]
}

model PushSubscription {
  id         Int      @id @default(autoincrement())
  endpoint   String   @unique
  keysAuth   String
  keysP256dh String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
}
